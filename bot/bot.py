import os

from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    CallbackQueryHandler,
    PreCheckoutQueryHandler
)
from dotenv import load_dotenv

from utils.init_django import init_django
init_django()

from meetapp.models import User

from scenes.scene_router import SceneRouter
from scenes.connection import ConnectionScene
from scenes.donate import DonateScene
from scenes.main_menu import MainMenuScene
from scenes.ask_question import AskQuestionScene
from scenes.schedule import ScheduleScene
from scenes.speaker_view import SpeakerQuestionViewerScene


SceneRouter.scenes = {
    'main_menu': MainMenuScene,
    'connection': ConnectionScene,
    'donate': DonateScene,
    'ask_question': AskQuestionScene,
    'schedule': ScheduleScene,
    'speaker_view': SpeakerQuestionViewerScene
}


def start(update, context):

    tg_user = update.effective_user
    speaker_ids = context.bot_data.get('SPEAKER_IDS', [])

    if tg_user.username:
        role = 'speaker' if tg_user.id in speaker_ids else 'listener'
        User.objects.get_or_create(
            tg_id=tg_user.id,
            defaults={
                'first_name': tg_user.first_name or '',
                'username': tg_user.username,
                'role': role,
            }
        )

    update.message.reply_text(
        '''
üëã –Ø Meetup Bot.

‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìÖ

‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞—é –≤–æ–ø—Ä–æ—Å—ã –∏ —à–ª—é –∏—Ö –¥–æ–∫–ª–∞–¥—á–∏–∫—É üîÑ

‚Ä¢ –ó–Ω–∞–∫–æ–º–ª—é –≥–æ—Å—Ç–µ–π –º–µ–∂–¥—É —Å–æ–±–æ–π ü§ù

‚Ä¢ –° —Ä–∞–¥–æ—Å—Ç—å—é –ø—Ä–∏–Ω–∏–º–∞—é –¥–æ–Ω–∞—Ç—ã üí∏

–í—Å—ë ‚Äî —Ä–∞–∑–≤–∏–≤–∞–µ–º—Å—è, –æ–±—â–∞–µ–º—Å—è, –µ–¥–∏–º –ø–∏—Ü—Ü—É! üçï

–î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /help.
'''
    )

    scene = SceneRouter.get('main_menu')
    scene.handle(update, context)


def help_command(update, context):
    text = '''
–ü—Ä–∏–≤–µ—Ç ‚Äî —è Meetup Bot!
–í–æ—Ç —á—Ç–æ —è —É–º–µ—é, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –º–∏—Ç–∞–ø—ã –∂–∏–≤—ã–º–∏ –∏ –ø–æ–ª–µ–∑–Ω—ã–º–∏:

üóì –ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤ —á–∞—Ç–µ

  ‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—é –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ (—Å–ø–∏–∫–µ—Ä—ã, —Ç–µ–º—ã, –≤—Ä–µ–º—è) –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º.

  ‚Ä¢ –ò–ª–∏ –∂–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.

üí¨ –í–æ–ø—Ä–æ—Å—ã –±–µ–∑ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞

  ‚Ä¢ –ì–æ—Å—Ç—å –ø–∏—à–µ—Ç –≤–æ–ø—Ä–æ—Å –≤ –±–æ—Ç–µ ‚Üí —è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ—Å—ã–ª–∞—é –µ–≥–æ —Ç–µ–∫—É—â–µ–º—É —Å–ø–∏–∫–µ—Ä—É.

  ‚Ä¢ –í–æ –≤—Ä–µ–º—è –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è —Å–ø–∏–∫–µ—Ä –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç Telegram –∏ –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–µ —Ç–µ—Ä—è—è –Ω–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä–∞.

ü§ù –£–º–Ω—ã–π –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥

  ‚Ä¢ –ö–∞–∂–¥—ã–π –≥–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω—è–µ—Ç –º–∏–Ω–∏-–∞–Ω–∫–µ—Ç—ã: ¬´—á–µ–º –∑–∞–Ω–∏–º–∞—é—Å—å¬ª, ¬´–∏—â—É/–ø—Ä–µ–¥–ª–∞–≥–∞—é¬ª.

  ‚Ä¢ –Ø –ø–æ–¥–±–∏—Ä–∞—é –≤–∞–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –∞ –¥–∞–ª—å—à–µ –≤—ã —Ä–µ—à–∞–µ—Ç–µ —Å–∞–º–∏: –ø–∏—Å–∞—Ç—å –∏–ª–∏ –Ω–µ—Ç ü§ù.

üí∏ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–∏—Ç–∞–ø–∞

  ‚Ä¢ –ö–Ω–æ–ø–∫–∞ ¬´üí∏ –î–æ–Ω–∞—Ç¬ª –≤–µ–¥—ë—Ç –Ω–∞ –ø–ª–∞—Ç—ë–∂–∫—É (–ª—é–±–∞—è —Å—É–º–º–∞).

  ‚Ä¢ –õ—é–±–∞—è —Å—É–º–º–∞ –ø–æ–º–æ–≥–∞–µ—Ç –¥–≤–∏–≥–∞—Ç—å –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤–ø–µ—Ä–µ–¥!
'''
    update.message.reply_text(text)


def universal_handler(update, context):
    scene = context.user_data.get('scene')
    if not scene:
        update.callback_query.answer('—á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å, —á–∏–Ω–∏')
    scene.process(update, context)


def callback_handler(update, context):
    scene = context.user_data.get('scene')
    if not scene:
        if update.callback_query:
            update.callback_query.answer('—á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å, —á–∏–Ω–∏')
        elif update.message:
            update.message.reply_text('—á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å, —á–∏–Ω–∏')
        return
    scene.process_callback(update, context)


def precheckout_handler(update, context):
    query = update.pre_checkout_query
    query.answer(ok=True)


def payment_success(update, context):
    update.message.reply_text('–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!')


def main():
    load_dotenv()
    
    SPEAKER_IDS = list(map(int, os.getenv("SPEAKER_IDS", "").split(",")))

    updater = Updater(os.getenv('TG_BOT_TOKEN'), use_context=True)
    dispatcher = updater.dispatcher

    dispatcher.bot_data['SPEAKER_IDS'] = SPEAKER_IDS

    dispatcher.add_handler(CommandHandler('start', start))
    dispatcher.add_handler(CommandHandler('help', help_command))
    dispatcher.add_handler(MessageHandler(Filters.text, universal_handler))
    dispatcher.add_handler(CallbackQueryHandler(callback_handler))
    dispatcher.add_handler(PreCheckoutQueryHandler(precheckout_handler))
    dispatcher.add_handler(MessageHandler(
        Filters.successful_payment, payment_success))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
